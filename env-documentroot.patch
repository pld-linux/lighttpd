revert:

-  * [*cgi] Use physical base dir (alias, userdir) as DOCUMENT_ROOT in cgi environments (fixes #2216)

probably fixed in
https://github.com/lighttpd/lighttpd1.4/commit/7fa5bfc9381764d6c35ac29674bd830e8e5fee33
 
--- lighttpd-1.4.36/src/mod_fastcgi.c~	2015-07-26 18:30:29.000000000 +0300
+++ lighttpd-1.4.36/src/mod_fastcgi.c	2015-07-26 18:31:50.285226477 +0300
@@ -1918,7 +1918,7 @@
 			if (!buffer_string_is_empty(host->docroot)) {
 				buffer_copy_buffer(p->path, host->docroot);
 			} else {
-				buffer_copy_buffer(p->path, con->physical.basedir);
+				buffer_copy_buffer(p->path, con->physical.doc_root);
 			}
 			buffer_append_string_buffer(p->path, con->request.pathinfo);
 			FCGI_ENV_ADD_CHECK(fcgi_env_add(p->fcgi_env, CONST_STR_LEN("PATH_TRANSLATED"), CONST_BUF_LEN(p->path)),con)
@@ -2008,7 +2008,7 @@
 		}
 
 		FCGI_ENV_ADD_CHECK(fcgi_env_add(p->fcgi_env, CONST_STR_LEN("SCRIPT_FILENAME"), CONST_BUF_LEN(p->path)),con)
-		FCGI_ENV_ADD_CHECK(fcgi_env_add(p->fcgi_env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.basedir)),con)
+		FCGI_ENV_ADD_CHECK(fcgi_env_add(p->fcgi_env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.doc_root)),con)
 	}
 
 	if (host->strip_request_uri->used > 1) {
@@ -3108,7 +3108,6 @@
 				 */
 
 				buffer_copy_buffer(con->physical.doc_root, host->docroot);
-				buffer_copy_buffer(con->physical.basedir, host->docroot);
 
 				buffer_copy_buffer(con->physical.path, host->docroot);
 				buffer_append_string_buffer(con->physical.path, con->uri.path);
--- lighttpd-1.4.36/src/mod_scgi.c~	2015-07-26 18:30:29.000000000 +0300
+++ lighttpd-1.4.36/src/mod_scgi.c	2015-07-26 18:33:12.406160926 +0300
@@ -1547,7 +1547,7 @@
 		if (!buffer_string_is_empty(host->docroot)) {
 			buffer_copy_buffer(p->path, host->docroot);
 		} else {
-			buffer_copy_buffer(p->path, con->physical.basedir);
+			buffer_copy_buffer(p->path, con->physical.doc_root);
 		}
 		buffer_append_string_buffer(p->path, con->request.pathinfo);
 		scgi_env_add(p->scgi_env, CONST_STR_LEN("PATH_TRANSLATED"), CONST_BUF_LEN(p->path));
@@ -1589,7 +1589,7 @@
 		buffer_copy_string_buffer(p->path, con->physical.path);
 
 		scgi_env_add(p->scgi_env, CONST_STR_LEN("SCRIPT_FILENAME"), CONST_BUF_LEN(p->path));
-		scgi_env_add(p->scgi_env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.basedir));
+		scgi_env_add(p->scgi_env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.doc_root));
 	}
 	scgi_env_add(p->scgi_env, CONST_STR_LEN("REQUEST_URI"), CONST_BUF_LEN(con->request.orig_uri));
 	if (!buffer_is_equal(con->request.uri, con->request.orig_uri)) {
Index: src/mod_cgi.c
===================================================================
--- ./src/mod_cgi.c	(revision 2794)
+++ ./src/mod_cgi.c	(revision 2793)
@@ -928,7 +928,7 @@
 		cgi_env_add(&env, CONST_STR_LEN("CONTENT_LENGTH"), buf, strlen(buf));
 		cgi_env_add(&env, CONST_STR_LEN("SCRIPT_FILENAME"), CONST_BUF_LEN(con->physical.path));
 		cgi_env_add(&env, CONST_STR_LEN("SCRIPT_NAME"), CONST_BUF_LEN(con->uri.path));
-		cgi_env_add(&env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.basedir));
+		cgi_env_add(&env, CONST_STR_LEN("DOCUMENT_ROOT"), CONST_BUF_LEN(con->physical.doc_root));
 
 		/* for valgrind */
 		if (NULL != (s = getenv("LD_PRELOAD"))) {
