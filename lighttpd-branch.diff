Index: configure.in
===================================================================
Index: src/configfile-glue.c
===================================================================
--- src/configfile-glue.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/configfile-glue.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -1,4 +1,5 @@
 #include <string.h>
+#include <stdlib.h>
 
 #include "base.h"
 #include "buffer.h"
@@ -90,6 +91,22 @@
 			case TYPE_STRING: {
 				data_string *ds = (data_string *)du;
 
+				/* If the value came from an environment variable, then it is a
+				 * data_string, although it may contain a number in ASCII
+				 * decimal format.  We try to interpret the string as a decimal
+				 * short before giving up, in order to support setting numeric
+				 * values with environment variables (eg, port number).
+				 */
+				if (ds->value->ptr && *ds->value->ptr) {
+					char *e;
+					long l = strtol(ds->value->ptr, &e, 10);
+					if (e != ds->value->ptr && !*e && l >=0 && l <= 65535) {
+						*((unsigned short *)(cv[i].destination)) = l;
+						break;
+
+					}
+				}
+
 				log_error_write(srv, __FILE__, __LINE__, "ssb", "got a string but expected a short:", cv[i].key, ds->value);
 
 				return -1;
Index: src/mod_cgi.c
===================================================================
--- src/mod_cgi.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/mod_cgi.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -822,15 +822,27 @@
 			);
 		cgi_env_add(&env, CONST_STR_LEN("SERVER_PORT"), buf, strlen(buf));
 
+		switch (srv_sock->addr.plain.sa_family) {
 #ifdef HAVE_IPV6
-		s = inet_ntop(srv_sock->addr.plain.sa_family,
-			      srv_sock->addr.plain.sa_family == AF_INET6 ?
-			      (const void *) &(srv_sock->addr.ipv6.sin6_addr) :
-			      (const void *) &(srv_sock->addr.ipv4.sin_addr),
-			      b2, sizeof(b2)-1);
+		case AF_INET6:
+			s = inet_ntop(srv_sock->addr.plain.sa_family,
+			              (const void *) &(srv_sock->addr.ipv6.sin6_addr),
+			              b2, sizeof(b2)-1);
+			break;
+		case AF_INET:
+			s = inet_ntop(srv_sock->addr.plain.sa_family,
+			              (const void *) &(srv_sock->addr.ipv4.sin_addr),
+			              b2, sizeof(b2)-1);
+			break;
 #else
-		s = inet_ntoa(srv_sock->addr.ipv4.sin_addr);
+		case AF_INET:
+			s = inet_ntoa(srv_sock->addr.ipv4.sin_addr);
+			break;
 #endif
+		default:
+			s = "";
+			break;
+		}
 		cgi_env_add(&env, CONST_STR_LEN("SERVER_ADDR"), s, strlen(s));
 
 		s = get_http_method_name(con->request.http_method);
@@ -848,15 +860,27 @@
 		}
 
 
+		switch (con->dst_addr.plain.sa_family) {
 #ifdef HAVE_IPV6
-		s = inet_ntop(con->dst_addr.plain.sa_family,
-			      con->dst_addr.plain.sa_family == AF_INET6 ?
-			      (const void *) &(con->dst_addr.ipv6.sin6_addr) :
-			      (const void *) &(con->dst_addr.ipv4.sin_addr),
-			      b2, sizeof(b2)-1);
+		case AF_INET6:
+			s = inet_ntop(con->dst_addr.plain.sa_family,
+			              (const void *) &(con->dst_addr.ipv6.sin6_addr),
+			              b2, sizeof(b2)-1);
+			break;
+		case AF_INET:
+			s = inet_ntop(con->dst_addr.plain.sa_family,
+			              (const void *) &(con->dst_addr.ipv4.sin_addr),
+			              b2, sizeof(b2)-1);
+			break;
 #else
-		s = inet_ntoa(con->dst_addr.ipv4.sin_addr);
+		case AF_INET:
+			s = inet_ntoa(con->dst_addr.ipv4.sin_addr);
+			break;
 #endif
+		default:
+			s = "";
+			break;
+		}
 		cgi_env_add(&env, CONST_STR_LEN("REMOTE_ADDR"), s, strlen(s));
 
 		LI_ltostr(buf,
Index: src/connections.c
===================================================================
--- src/connections.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/connections.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -330,15 +330,13 @@
 	buffer_prepare_copy(b, 4 * 1024);
 	len = recv(con->fd, b->ptr, b->size - 1, 0);
 #else
-	if (ioctl(con->fd, FIONREAD, &toread)) {
-		log_error_write(srv, __FILE__, __LINE__, "sd",
-				"unexpected end-of-file:",
-				con->fd);
-		return -1;
+	if (ioctl(con->fd, FIONREAD, &toread) || toread == 0) {
+		b = chunkqueue_get_append_buffer(con->read_queue);
+		buffer_prepare_copy(b, 4 * 1024);
+	} else {
+		b = chunkqueue_get_append_buffer(con->read_queue);
+		buffer_prepare_copy(b, toread + 1);
 	}
-	b = chunkqueue_get_append_buffer(con->read_queue);
-	buffer_prepare_copy(b, toread + 1);
-
 	len = read(con->fd, b->ptr, b->size - 1);
 #endif
 
Index: src/configfile.c
===================================================================
--- src/configfile.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/configfile.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -940,7 +940,6 @@
 }
 
 int config_parse_cmd(server *srv, config_t *context, const char *cmd) {
-	proc_handler_t proc;
 	tokenizer_t t;
 	int ret;
 	buffer *source;
@@ -960,7 +959,7 @@
 		chdir(context->basedir->ptr);
 	}
 
-	if (0 != proc_open_buffer(&proc, cmd, NULL, out, NULL)) {
+	if (0 != proc_open_buffer(cmd, NULL, out, NULL)) {
 		log_error_write(srv, __FILE__, __LINE__, "sbss",
 				"opening", source, "failed:", strerror(errno));
 		ret = -1;
Index: src/mod_simple_vhost.c
===================================================================
--- src/mod_simple_vhost.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/mod_simple_vhost.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -249,6 +249,8 @@
 				return HANDLER_GO_ON;
 			} else {
 				buffer_copy_string_buffer(con->server_name, p->conf.default_host);
+				/* do not cache default host */
+				return HANDLER_GO_ON;
 			}
 		} else {
 			buffer_copy_string_buffer(con->server_name, con->uri.authority);
Index: src/http_auth.c
===================================================================
--- src/http_auth.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/http_auth.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -57,22 +57,25 @@
 
 static const char base64_pad = '=';
 
+/* "A-Z a-z 0-9 + /" maps to 0-63 */
 static const short base64_reverse_table[256] = {
-	        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,
-		        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,
-		        -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,
-		        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,
-		        -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
-		        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-		        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
+/*	 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x00 - 0x0F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x10 - 0x1F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, /* 0x20 - 0x2F */
+	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, /* 0x30 - 0x3F */
+	-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, /* 0x40 - 0x4F */
+	15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, /* 0x50 - 0x5F */
+	-1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, /* 0x60 - 0x6F */
+	41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, /* 0x70 - 0x7F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x80 - 0x8F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0x90 - 0x9F */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xA0 - 0xAF */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xB0 - 0xBF */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xC0 - 0xCF */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xD0 - 0xDF */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xE0 - 0xEF */
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, /* 0xF0 - 0xFF */
 };
 
 
@@ -697,7 +700,7 @@
 		}
 	} else if (p->conf.auth_backend == AUTH_BACKEND_LDAP) {
 #ifdef USE_LDAP
-		LDAP *ldap = NULL;
+		LDAP *ldap;
 		LDAPMessage *lm, *first;
 		char *dn;
 		int ret;
@@ -742,56 +745,45 @@
 		buffer_append_string_buffer(p->ldap_filter, username);
 		buffer_append_string_buffer(p->ldap_filter, p->conf.ldap_filter_post);
 
+
 		/* 2. */
-		if (p->conf.ldap == NULL ||
-		    LDAP_SUCCESS != (ret = ldap_search_s(p->conf.ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
-			/* try again if ldap was only temporary down */
-			if (p->conf.ldap == NULL || ret != LDAP_SERVER_DOWN ||  LDAP_SUCCESS != (ret = ldap_search_s(p->conf.ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
-				if (auth_ldap_init(srv, &p->conf) != HANDLER_GO_ON)
+		if (p->anon_conf->ldap == NULL ||
+		    LDAP_SUCCESS != (ret = ldap_search_s(p->anon_conf->ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
+
+			/* try again; the ldap library sometimes fails for the first call but reconnects */
+			if (p->anon_conf->ldap == NULL || ret != LDAP_SERVER_DOWN ||
+			    LDAP_SUCCESS != (ret = ldap_search_s(p->anon_conf->ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
+
+				if (auth_ldap_init(srv, p->anon_conf) != HANDLER_GO_ON)
 					return -1;
 
-				ldap = p->conf.ldap; /* save temporary ldap connection (TODO: redo ldap) */
-				if (LDAP_SUCCESS != (ret = ldap_search_s(p->conf.ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
+				if (p->anon_conf->ldap == NULL ||
+				    LDAP_SUCCESS != (ret = ldap_search_s(p->anon_conf->ldap, p->conf.auth_ldap_basedn->ptr, LDAP_SCOPE_SUBTREE, p->ldap_filter->ptr, attrs, 0, &lm))) {
 					log_error_write(srv, __FILE__, __LINE__, "sssb",
 							"ldap:", ldap_err2string(ret), "filter:", p->ldap_filter);
-					/* destroy temporary ldap connection (TODO: redo ldap) */
-					ldap_unbind_s(ldap);
 					return -1;
 				}
 			}
 		}
 
-		if (NULL == (first = ldap_first_entry(p->conf.ldap, lm))) {
-			/* No matching entry is not an error */
-			/* log_error_write(srv, __FILE__, __LINE__, "s", "ldap ..."); */
+		if (NULL == (first = ldap_first_entry(p->anon_conf->ldap, lm))) {
+			log_error_write(srv, __FILE__, __LINE__, "s", "ldap ...");
 
 			ldap_msgfree(lm);
 
-			/* destroy temporary ldap connection (TODO: redo ldap) */
-			if (NULL != ldap) {
-				ldap_unbind_s(ldap);
-			}
 			return -1;
 		}
 
-		if (NULL == (dn = ldap_get_dn(p->conf.ldap, first))) {
-			log_error_write(srv, __FILE__, __LINE__, "s", "ldap: ldap_get_dn failed");
+		if (NULL == (dn = ldap_get_dn(p->anon_conf->ldap, first))) {
+			log_error_write(srv, __FILE__, __LINE__, "s", "ldap ...");
 
 			ldap_msgfree(lm);
 
-			/* destroy temporary ldap connection (TODO: redo ldap) */
-			if (NULL != ldap) {
-				ldap_unbind_s(ldap);
-			}
 			return -1;
 		}
 
 		ldap_msgfree(lm);
 
-		/* destroy temporary ldap connection (TODO: redo ldap) */
-		if (NULL != ldap) {
-			ldap_unbind_s(ldap);
-		}
 
 		/* 3. */
 		if (NULL == (ldap = ldap_init(p->conf.auth_ldap_hostname->ptr, LDAP_PORT))) {
Index: src/http_auth.h
===================================================================
--- src/http_auth.h	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/http_auth.h	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -63,7 +63,7 @@
 
 	mod_auth_plugin_config **config_storage;
 
-	mod_auth_plugin_config conf; /* this is only used as long as no handler_ctx is setup */
+	mod_auth_plugin_config conf, *anon_conf; /* this is only used as long as no handler_ctx is setup */
 } mod_auth_plugin_data;
 
 int http_auth_basic_check(server *srv, connection *con, mod_auth_plugin_data *p, array *req, buffer *url, const char *realm_str);
Index: src/mod_auth.c
===================================================================
--- src/mod_auth.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/mod_auth.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -115,7 +115,7 @@
 	PATCH(auth_ldap_starttls);
 	PATCH(auth_ldap_allow_empty_pw);
 #ifdef USE_LDAP
-	PATCH(ldap);
+	p->anon_conf = s;
 	PATCH(ldap_filter_pre);
 	PATCH(ldap_filter_post);
 #endif
@@ -149,7 +149,7 @@
 			} else if (buffer_is_equal_string(du->key, CONST_STR_LEN("auth.backend.ldap.hostname"))) {
 				PATCH(auth_ldap_hostname);
 #ifdef USE_LDAP
-				PATCH(ldap);
+				p->anon_conf = s;
 #endif
 			} else if (buffer_is_equal_string(du->key, CONST_STR_LEN("auth.backend.ldap.base-dn"))) {
 				PATCH(auth_ldap_basedn);
@@ -527,7 +527,7 @@
 			}
 		}
 
-		switch(s->auth_backend) {
+		switch(s->auth_ldap_hostname->used) {
 		case AUTH_BACKEND_LDAP: {
 			handler_t ret = auth_ldap_init(srv, s);
 			if (ret == HANDLER_ERROR)
@@ -554,6 +554,9 @@
 #endif
 
 	if (s->auth_ldap_hostname->used) {
+		/* free old context */
+		if (NULL != s->ldap) ldap_unbind_s(s->ldap);
+
 		if (NULL == (s->ldap = ldap_init(s->auth_ldap_hostname->ptr, LDAP_PORT))) {
 			log_error_write(srv, __FILE__, __LINE__, "ss", "ldap ...", strerror(errno));
 
Index: src/mod_fastcgi.c
===================================================================
--- src/mod_fastcgi.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/mod_fastcgi.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -3608,47 +3608,50 @@
 				"handling it in mod_fastcgi");
 			}
 
-			/* the prefix is the SCRIPT_NAME,
-			 * everything from start to the next slash
-			 * this is important for check-local = "disable"
-			 *
-			 * if prefix = /admin.fcgi
-			 *
-			 * /admin.fcgi/foo/bar
-			 *
-			 * SCRIPT_NAME = /admin.fcgi
-			 * PATH_INFO   = /foo/bar
-			 *
-			 * if prefix = /fcgi-bin/
-			 *
-			 * /fcgi-bin/foo/bar
-			 *
-			 * SCRIPT_NAME = /fcgi-bin/foo
-			 * PATH_INFO   = /bar
-			 *
-			 * if prefix = /, and fix-root-path-name is enable
-			 *
-			 * /fcgi-bin/foo/bar
-			 *
-			 * SCRIPT_NAME = /fcgi-bin/foo
-			 * PATH_INFO   = /bar
-			 *
-			 */
+			/* do not split path info for authorizer */
+			if (host->mode != FCGI_AUTHORIZER) {
+				/* the prefix is the SCRIPT_NAME,
+				* everything from start to the next slash
+				* this is important for check-local = "disable"
+				*
+				* if prefix = /admin.fcgi
+				*
+				* /admin.fcgi/foo/bar
+				*
+				* SCRIPT_NAME = /admin.fcgi
+				* PATH_INFO   = /foo/bar
+				*
+				* if prefix = /fcgi-bin/
+				*
+				* /fcgi-bin/foo/bar
+				*
+				* SCRIPT_NAME = /fcgi-bin/foo
+				* PATH_INFO   = /bar
+				*
+				* if prefix = /, and fix-root-path-name is enable
+				*
+				* /fcgi-bin/foo/bar
+				*
+				* SCRIPT_NAME = /fcgi-bin/foo
+				* PATH_INFO   = /bar
+				*
+				*/
 
-			/* the rewrite is only done for /prefix/? matches */
-			if (extension->key->ptr[0] == '/' &&
-			    con->uri.path->used > extension->key->used &&
-			    NULL != (pathinfo = strchr(con->uri.path->ptr + extension->key->used - 1, '/'))) {
-				/* rewrite uri.path and pathinfo */
+				/* the rewrite is only done for /prefix/? matches */
+				if (extension->key->ptr[0] == '/' &&
+					con->uri.path->used > extension->key->used &&
+					NULL != (pathinfo = strchr(con->uri.path->ptr + extension->key->used - 1, '/'))) {
+					/* rewrite uri.path and pathinfo */
 
-				buffer_copy_string(con->request.pathinfo, pathinfo);
+					buffer_copy_string(con->request.pathinfo, pathinfo);
 
-				con->uri.path->used -= con->request.pathinfo->used - 1;
-				con->uri.path->ptr[con->uri.path->used - 1] = '\0';
-			} else if (host->fix_root_path_name && extension->key->ptr[0] == '/' && extension->key->ptr[1] == '\0') {
-				buffer_copy_string(con->request.pathinfo, con->uri.path->ptr);
-				con->uri.path->used = 1;
-				con->uri.path->ptr[con->uri.path->used - 1] = '\0';
+					con->uri.path->used -= con->request.pathinfo->used - 1;
+					con->uri.path->ptr[con->uri.path->used - 1] = '\0';
+				} else if (host->fix_root_path_name && extension->key->ptr[0] == '/' && extension->key->ptr[1] == '\0') {
+					buffer_copy_string(con->request.pathinfo, con->uri.path->ptr);
+					con->uri.path->used = 1;
+					con->uri.path->ptr[con->uri.path->used - 1] = '\0';
+				}
 			}
 		}
 	} else {
Index: src/proc_open.c
===================================================================
--- src/proc_open.c	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/proc_open.c	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -287,32 +287,33 @@
 }
 /* }}} */
 /* {{{ proc_open_buffer */
-int proc_open_buffer(proc_handler_t *proc, const char *command, buffer *in, buffer *out, buffer *err) {
+int proc_open_buffer(const char *command, buffer *in, buffer *out, buffer *err) {
+	proc_handler_t proc;
 
-	UNUSED(err);
-
-	if (proc_open(proc, command) != 0) {
+	if (proc_open(&proc, command) != 0) {
 		return -1;
 	}
 
 	if (in) {
-		if (write(proc->in.fd, (void *)in->ptr, in->used) < 0) {
+		if (write(proc.in.fd, (void *)in->ptr, in->used) < 0) {
 			perror("error writing pipe");
 			return -1;
 		}
 	}
-	pipe_close(&proc->in);
+	pipe_close(&proc.in);
 
 	if (out) {
-		proc_read_fd_to_buffer(proc->out.fd, out);
+		proc_read_fd_to_buffer(proc.out.fd, out);
 	}
-	pipe_close(&proc->out);
+	pipe_close(&proc.out);
 
 	if (err) {
-		proc_read_fd_to_buffer(proc->err.fd, err);
+		proc_read_fd_to_buffer(proc.err.fd, err);
 	}
-	pipe_close(&proc->err);
+	pipe_close(&proc.err);
 
+	proc_close(&proc);
+
 	return 0;
 }
 /* }}} */
@@ -366,7 +367,7 @@
 		RESET();
 
 		fprintf(stdout, "test: echo 321 with read\n"); fflush(stdout);
-		if (proc_open_buffer(&proc, "echo 321", NULL, out, err) != 0) {
+		if (proc_open_buffer("echo 321", NULL, out, err) != 0) {
 			ERROR_OUT();
 		}
 		fprintf(stdout, "result: ->%s<-\n\n", out->ptr); fflush(stdout);
@@ -374,7 +375,7 @@
 
 		fprintf(stdout, "test: echo 123 | " CMD_CAT "\n"); fflush(stdout);
 		buffer_copy_string_len(in, CONST_STR_LEN("123\n"));
-		if (proc_open_buffer(&proc, CMD_CAT, in, out, err) != 0) {
+		if (proc_open_buffer(CMD_CAT, in, out, err) != 0) {
 			ERROR_OUT();
 		}
 		fprintf(stdout, "result: ->%s<-\n\n", out->ptr); fflush(stdout);
Index: src/proc_open.h
===================================================================
--- src/proc_open.h	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ src/proc_open.h	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -22,4 +22,4 @@
 
 int proc_close(proc_handler_t *ht);
 int proc_open(proc_handler_t *ht, const char *command);
-int proc_open_buffer(proc_handler_t *ht, const char *command, buffer *in, buffer *out, buffer *err);
+int proc_open_buffer(const char *command, buffer *in, buffer *out, buffer *err);
Index: tests/mod-fastcgi.t
===================================================================
--- tests/mod-fastcgi.t	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ tests/mod-fastcgi.t	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -7,7 +7,7 @@
 }
 
 use strict;
-use Test::More tests => 49;
+use Test::More tests => 50;
 use LightyTest;
 
 my $tf = LightyTest->new();
@@ -215,7 +215,7 @@
 }
 
 SKIP: {
-	skip "no fcgi-auth found", 4 unless -x $tf->{BASEDIR}."/tests/fcgi-auth" || -x $tf->{BASEDIR}."/tests/fcgi-auth.exe"; 
+	skip "no fcgi-auth found", 5 unless -x $tf->{BASEDIR}."/tests/fcgi-auth" || -x $tf->{BASEDIR}."/tests/fcgi-auth.exe"; 
 
 	$tf->{CONFIGFILE} = 'fastcgi-auth.conf';
 	ok($tf->start_proc == 0, "Starting lighttpd with $tf->{CONFIGFILE}") or die();
@@ -235,6 +235,14 @@
 	$t->{RESPONSE} = [ { 'HTTP-Protocol' => 'HTTP/1.0', 'HTTP-Status' => 403 } ];
 	ok($tf->handle_http($t) == 0, 'FastCGI - Auth');
 
+	$t->{REQUEST}  = ( <<EOF
+GET /expire/access.txt?ok HTTP/1.0
+Host: www.example.org
+EOF
+ );
+	$t->{RESPONSE} = [ { 'HTTP-Protocol' => 'HTTP/1.0', 'HTTP-Status' => 200 } ];
+	ok($tf->handle_http($t) == 0, 'FastCGI - Auth in subdirectory');
+
 	ok($tf->stop_proc == 0, "Stopping lighttpd");
 }
 
Index: tests/fastcgi-auth.conf
===================================================================
--- tests/fastcgi-auth.conf	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ tests/fastcgi-auth.conf	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -89,6 +89,7 @@
 				    "bin-path" => env.SRCDIR + "/fcgi-auth",
                                     "mode" => "authorizer",
                                     "docroot" => env.SRCDIR + "/tmp/lighttpd/servers/www.example.org/pages/",
+                                    "check-local" => "disable",
 
 				  )
 				)
Index: SConstruct
===================================================================
--- SConstruct	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ SConstruct	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -5,7 +5,7 @@
 from stat import *
 
 package = 'lighttpd'
-version = '1.4.20'
+version = '1.4.21'
 
 def checkCHeaders(autoconf, hdrs):
 	p = re.compile('[^A-Z0-9]')
Index: Makefile.am
===================================================================
--- Makefile.am	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ Makefile.am	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -1,4 +1,4 @@
-SUBDIRS=src doc tests cygwin openwrt
+SUBDIRS=src doc tests
 
 EXTRA_DIST=autogen.sh SConstruct
 
Index: NEWS
===================================================================
--- NEWS	(.../tags/lighttpd-1.4.20)	(revision 2324)
+++ NEWS	(.../branches/lighttpd-1.4.x)	(revision 2324)
@@ -3,8 +3,21 @@
 NEWS
 ====
 
-- 1.4.20 -
+- 1.4.21 -
 
+  * Fix base64 decoding in mod_auth (#1757, thx guido)
+  * Fix mod_cgi segfault when bound to unix domain socket (#653)
+  * Do not rely on ioctl FIONREAD (#673)
+  * Now really fix mod auth ldap (#1066)
+  * Fix leaving zombie process with include_shell (#1777)
+  * Removed debian/, openwrt/ and cygwin/; they weren't kept up-to-date, and we decided to remove dist. specific stuff
+  * Try to convert string options to shorts for numeric options in config file; allows to use env-vars for numeric options. (#1159, thx andrewb)
+  * Do not cache default vhost in mod_simple_vhost (#709)
+  * Trust pcre-config, do not check for pcre manually (#1769)
+  * Fix fastcgi authorization in subdirectories with check-local=disabled; don't split pathinfo for authorizer. (#963)
+
+- 1.4.20 - 2008-09-30
+
   * Fix mod_compress to compile with old gcc version (#1592)
   * Fix mod_extforward to compile with old gcc version (#1591)
   * Update documentation for #1587

Property changes on: .
___________________________________________________________________
Modified: bzr:revision-info
   - timestamp: 2008-09-23 21:04:22.819999933 +0200
committer: Stefan Bühler <stbuehler@web.de>
properties: 
	branch-nick: lighttpd-1.4.x

   + timestamp: 2008-10-01 22:08:02.178999901 +0200
committer: Stefan Bühler <stbuehler@web.de>
properties: 
	branch-nick: lighttpd-1.4.x

Modified: bzr:revision-id:v3-trunk0
   - 1127 stbuehler@web.de-20080728081644-j4cxnhduw8kbt8um
1128 stbuehler@web.de-20080728084246-axvxdtjsrratxixs
1129 stbuehler@web.de-20080729211700-s8v6nq2cu06qesls
1130 stbuehler@web.de-20080729211726-4yxb6e5dva1cn0lz
1131 stbuehler@web.de-20080729211750-4ulzigswx17uciyu
1132 stbuehler@web.de-20080729211850-nliz3kd0m576ztuu
1133 stbuehler@web.de-20080730163440-dg2y2sbf0u4grmn4
1134 stbuehler@web.de-20080730173952-kiutzg6geqy7mick
1135 stbuehler@web.de-20080730193616-9kc2ms7rrhv1lkn7
1136 stbuehler@web.de-20080730211457-z4a6uth1y29glbqh
1137 stbuehler@web.de-20080730213517-b6sjcrdwbmipl334
1138 stbuehler@web.de-20080731102617-2xw8unjfqic7lsew
1139 stbuehler@web.de-20080731102703-q4tu5a6em9y8xdg0
1140 stbuehler@web.de-20080731102729-l6vn5b05w9swqbg5
1141 stbuehler@web.de-20080731102756-oj3d4tnk0l90mj77
1142 stbuehler@web.de-20080731204442-blw14cj2fkr3l8ly
1143 stbuehler@web.de-20080731204508-imtfnurf922mg7tj
1144 stbuehler@web.de-20080801112347-girnwswdkwm8wuip
1145 stbuehler@web.de-20080801161245-kx1temr529o7xko9
1146 stbuehler@web.de-20080801175332-oc9e7x8edn1owcc0
1147 stbuehler@web.de-20080801183454-5i66v0gsdv0cgmia
1148 stbuehler@web.de-20080801192849-6zklfbb832sx0hvr
1149 stbuehler@web.de-20080801203119-o16elp8w854s6lol
1150 stbuehler@web.de-20080802162146-a4v57svc788pwdsv
1151 stbuehler@web.de-20080802162202-9udlc1wuwt09pyh2
1152 stbuehler@web.de-20080804135803-yuor9ze06px7qta4
1153 stbuehler@web.de-20080812194728-fupt781o6q058unh
1154 stbuehler@web.de-20080818162116-piz0ukqsaecv2li2
1155 stbuehler@web.de-20080818235700-94t0xc6ml70zojwq
1156 stbuehler@web.de-20080819163650-1qhwsqszr78cr4xx
1157 stbuehler@web.de-20080819163757-1qq3t1f1wj69t8xs
1158 stbuehler@web.de-20080819163914-rklhkurg8apv85l2
1159 stbuehler@web.de-20080819163953-tlqew751e43phf5b
1160 stbuehler@web.de-20080819164108-8ogh68sm1uyteawe
1161 stbuehler@web.de-20080819173911-w5bqpb7cp9jmdqye
1162 stbuehler@web.de-20080819222242-c0ta5gnli9p3j35a
1163 stbuehler@web.de-20080820100730-g1bwdh4nqb53ag9u
1164 stbuehler@web.de-20080820100752-9pggugdyfnnps8qu
1165 stbuehler@web.de-20080820164258-v2j00motsrsc5esp
1166 stbuehler@web.de-20080827144628-hi9hf4ch3n1wf9ao
1167 stbuehler@web.de-20080827144903-tfxu4yehlyu5kegc
1168 stbuehler@web.de-20080827155155-7mt92orehbxkh2lh
1169 stbuehler@web.de-20080917142048-zbcwpk39q9ewd516
1170 stbuehler@web.de-20080917142300-16gzt21x4nbjtj87
1171 stbuehler@web.de-20080919160134-385anjnd3txxdw3x
1172 stbuehler@web.de-20080920134142-fvvwaw2ys51dg4rj
1173 stbuehler@web.de-20080921153311-1f7rn01atdilmxmy
1174 stbuehler@web.de-20080922101346-wel327kjmykkpvmp
1175 stbuehler@web.de-20080923190422-uow06l38ndue36o4

   + 1127 stbuehler@web.de-20080728081644-j4cxnhduw8kbt8um
1128 stbuehler@web.de-20080728084246-axvxdtjsrratxixs
1129 stbuehler@web.de-20080729211700-s8v6nq2cu06qesls
1130 stbuehler@web.de-20080729211726-4yxb6e5dva1cn0lz
1131 stbuehler@web.de-20080729211750-4ulzigswx17uciyu
1132 stbuehler@web.de-20080729211850-nliz3kd0m576ztuu
1133 stbuehler@web.de-20080730163440-dg2y2sbf0u4grmn4
1134 stbuehler@web.de-20080730173952-kiutzg6geqy7mick
1135 stbuehler@web.de-20080730193616-9kc2ms7rrhv1lkn7
1136 stbuehler@web.de-20080730211457-z4a6uth1y29glbqh
1137 stbuehler@web.de-20080730213517-b6sjcrdwbmipl334
1138 stbuehler@web.de-20080731102617-2xw8unjfqic7lsew
1139 stbuehler@web.de-20080731102703-q4tu5a6em9y8xdg0
1140 stbuehler@web.de-20080731102729-l6vn5b05w9swqbg5
1141 stbuehler@web.de-20080731102756-oj3d4tnk0l90mj77
1142 stbuehler@web.de-20080731204442-blw14cj2fkr3l8ly
1143 stbuehler@web.de-20080731204508-imtfnurf922mg7tj
1144 stbuehler@web.de-20080801112347-girnwswdkwm8wuip
1145 stbuehler@web.de-20080801161245-kx1temr529o7xko9
1146 stbuehler@web.de-20080801175332-oc9e7x8edn1owcc0
1147 stbuehler@web.de-20080801183454-5i66v0gsdv0cgmia
1148 stbuehler@web.de-20080801192849-6zklfbb832sx0hvr
1149 stbuehler@web.de-20080801203119-o16elp8w854s6lol
1150 stbuehler@web.de-20080802162146-a4v57svc788pwdsv
1151 stbuehler@web.de-20080802162202-9udlc1wuwt09pyh2
1152 stbuehler@web.de-20080804135803-yuor9ze06px7qta4
1153 stbuehler@web.de-20080812194728-fupt781o6q058unh
1154 stbuehler@web.de-20080818162116-piz0ukqsaecv2li2
1155 stbuehler@web.de-20080818235700-94t0xc6ml70zojwq
1156 stbuehler@web.de-20080819163650-1qhwsqszr78cr4xx
1157 stbuehler@web.de-20080819163757-1qq3t1f1wj69t8xs
1158 stbuehler@web.de-20080819163914-rklhkurg8apv85l2
1159 stbuehler@web.de-20080819163953-tlqew751e43phf5b
1160 stbuehler@web.de-20080819164108-8ogh68sm1uyteawe
1161 stbuehler@web.de-20080819173911-w5bqpb7cp9jmdqye
1162 stbuehler@web.de-20080819222242-c0ta5gnli9p3j35a
1163 stbuehler@web.de-20080820100730-g1bwdh4nqb53ag9u
1164 stbuehler@web.de-20080820100752-9pggugdyfnnps8qu
1165 stbuehler@web.de-20080820164258-v2j00motsrsc5esp
1166 stbuehler@web.de-20080827144628-hi9hf4ch3n1wf9ao
1167 stbuehler@web.de-20080827144903-tfxu4yehlyu5kegc
1168 stbuehler@web.de-20080827155155-7mt92orehbxkh2lh
1169 stbuehler@web.de-20080917142048-zbcwpk39q9ewd516
1170 stbuehler@web.de-20080917142300-16gzt21x4nbjtj87
1171 stbuehler@web.de-20080919160134-385anjnd3txxdw3x
1172 stbuehler@web.de-20080920134142-fvvwaw2ys51dg4rj
1173 stbuehler@web.de-20080921153311-1f7rn01atdilmxmy
1174 stbuehler@web.de-20080922101346-wel327kjmykkpvmp
1175 stbuehler@web.de-20080923190422-uow06l38ndue36o4
1176 stbuehler@web.de-20080930112012-53jby2m8xslmd1hm
1177 stbuehler@web.de-20080930134824-j9q72rwuiczzof5k
1178 stbuehler@web.de-20080930142037-32pb6m3zjcwryw1w
1179 stbuehler@web.de-20080930142756-ueovgoshyb996bce
1180 stbuehler@web.de-20080930152935-1zfy67brol3xdbc0
1181 stbuehler@web.de-20080930193919-13n2q4c6fbgw0dkx
1182 stbuehler@web.de-20080930211152-4hmgs95wyg2deol7
1183 stbuehler@web.de-20081001132402-hxnyu6yzyk3mjf4d
1184 stbuehler@web.de-20081001155102-qf0mmu2kkpgr7xf0
1185 stbuehler@web.de-20081001160009-n67ss0vzlac2y60k
1186 stbuehler@web.de-20081001200802-l5og517etnneitk0


