# lighttpd configuration file
#
# use a it as base for lighttpd 1.0.0 and above
#
# $Id$

############ Options you really have to take care of ####################

## modules to load
# at least mod_access and mod_accesslog should be loaded
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory

server.modules = (
#	"mod_rewrite",
#	"mod_redirect",
#	"mod_alias",
	"mod_access",
#	"mod_auth",
#	"mod_status",
#	"mod_setenv",
#	"mod_fastcgi",
#	"mod_proxy",
#	"mod_simple_vhost",
#	"mod_evhost",
#	"mod_userdir",
#	"mod_cgi",
#	"mod_compress",
#	"mod_ssi",
#	"mod_usertrack",
#	"mod_expire",
#	"mod_secdownload",
#	"mod_rrdtool",
#	"mod_localizer",
	"mod_accesslog",
)

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root = "/home/services/lighttpd/html/"

## where to send error-messages to
server.errorlog = "/var/log/lighttpd/lighttpd.log"

# files to check for if .../ is requested
server.indexfiles = (
	"index.php",
	"index.html",
	"index.htm",
	"default.htm",
)

# mimetype mapping
mimetype.assign = (
	".pdf"          =>      "application/pdf",
	".sig"          =>      "application/pgp-signature",
	".spl"          =>      "application/futuresplash",
	".class"        =>      "application/octet-stream",
	".ps"           =>      "application/postscript",
	".torrent"      =>      "application/x-bittorrent",
	".dvi"          =>      "application/x-dvi",
	".gz"           =>      "application/x-gzip",
	".pac"          =>      "application/x-ns-proxy-autoconfig",
	".swf"          =>      "application/x-shockwave-flash",
	".tar.gz"       =>      "application/x-tgz",
	".tgz"          =>      "application/x-tgz",
	".tar"          =>      "application/x-tar",
	".zip"          =>      "application/zip",
	".mp3"          =>      "audio/mpeg",
	".m3u"          =>      "audio/x-mpegurl",
	".wma"          =>      "audio/x-ms-wma",
	".wax"          =>      "audio/x-ms-wax",
	".ogg"          =>      "application/ogg",
	".wav"          =>      "audio/x-wav",
	".gif"          =>      "image/gif",
	".jpg"          =>      "image/jpeg",
	".jpeg"         =>      "image/jpeg",
	".png"          =>      "image/png",
	".xbm"          =>      "image/x-xbitmap",
	".xpm"          =>      "image/x-xpixmap",
	".xwd"          =>      "image/x-xwindowdump",
	".css"          =>      "text/css",
	".html"         =>      "text/html",
	".htm"          =>      "text/html",
	".js"           =>      "text/javascript",
	".asc"          =>      "text/plain",
	".c"            =>      "text/plain",
	".conf"         =>      "text/plain",
	".text"         =>      "text/plain",
	".txt"          =>      "text/plain",
	".dtd"          =>      "text/xml",
	".xml"          =>      "text/xml",
	".mpeg"         =>      "video/mpeg",
	".mpg"          =>      "video/mpeg",
	".mov"          =>      "video/quicktime",
	".qt"           =>      "video/quicktime",
	".avi"          =>      "video/x-msvideo",
	".asf"          =>      "video/x-ms-asf",
	".asx"          =>      "video/x-ms-asf",
	".wmv"          =>      "video/x-ms-wmv",
	".bz2"          =>      "application/x-bzip",
	".tbz"          =>      "application/x-bzip-compressed-tar",
	".tar.bz2"      =>      "application/x-bzip-compressed-tar"
)

# Use the "Content-Type" extended attribute to obtain mime type if possible
#mimetype.use-xattr = "enable"

## send a different Server: header
## be nice and keep it at lighttpd
#server.tag = "lighttpd"

#### accesslog module
accesslog.filename = "/var/log/lighttpd/access.log"

## deny access the file-extensions
#
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
url.access-deny = ( "~", ".inc" )

######### Options that are good to be but not neccesary to be changed #######

## bind to port (default: 80)
#server.port = 81

## bind to localhost (default: all interfaces)
#server.bind = "grisu.home.kneschke.de"

## error-handler for status 404
#server.error-handler-404 = "/error-handler.html"
#server.error-handler-404 = "/error-handler.php"

## to help the rc.scripts
#server.pid-file = "/var/run/lighttpd.pid"

###### virtual hosts
##
##   If you want name-based virtual hosting add the next three settings and load
##   mod_simple_vhost
##
## document-root =
##   virtual-server-root + virtual-server-default-host + virtual-server-docroot or
##   virtual-server-root + http-host + virtual-server-docroot
##
#simple-vhost.server-root         = "/home/weigon/wwwroot/servers/"
#simple-vhost.default-host        = "grisu.home.kneschke.de"
#simple-vhost.document-root       = "/pages/"


##
## Format: <errorfile-prefix><status-code>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix = "/home/weigon/projects/lighttpd/doc/status-"

## virtual directory listings
#server.dir-listing          = "enable"

## enable debugging
#debug.log-request-header    = "enable"
#debug.log-response-header   = "enable"
#debug.log-request-handling  = "enable"
#debug.log-file-not-found    = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot            = "/"

## change uid to <uid> (default: don't care)
server.username            = "lighttpd"

## change uid to <uid> (default: don't care)
server.groupname           = "lighttpd"

#### compress module
#compress.cache-dir          = "/tmp/lighttpd/cache/compress/"
#compress.filetype           = ("text/plain", "text/html")

#### proxy module
## read proxy.txt for more info
#proxy.server = (
#	".php" => (
#		"localhost" => (
#			"host" => "192.168.0.101",
#			"port" => 80,
#		)
#	)
#)

#### fastcgi module
## read fastcgi.txt for more info
#fastcgi.debug = 1
#fastcgi.server = (
#	".php" => (
#		"localhost" => (
#			"socket" => "/var/run/php/php-fastcgi.sock",
#			"bin-path" => "/usr/bin/php.fcgi",
#		)
#	)
#)


#### CGI module
#cgi.assign = (
#	".pl"  => "/usr/bin/perl",
#	".cgi" => "/usr/bin/perl",
#)

#### SSL engine
#ssl.engine = "enable"
#ssl.pemfile = "server.pem"

#### status module
#status.status-url = "/server-status"
#status.config-url = "/server-config"

#### auth module
## read authentification.txt for more info
## debugging
# 0 for off, 1 for 'auth-ok' messages, 2 for verbose debugging
#auth.debug = 1
## type of backend
# plain, htpasswd, ldap or htdigest
#auth.backend = "plain"
# filename of the password storage
## for plain
#auth.backend.plain.userfile = "/etc/lighttpd/lighttpd.user"
#auth.backend.plain.groupfile = "/etc/lighttpd/lighttpd.group"
## for htpasswd
#auth.backend.htpasswd.userfile = "/etc/lighttpd/lighttpd-htpasswd.user"
## for htdigest
#auth.backend.htdigest.userfile = "/etc/lighttpd/lighttpd-htdigest.user"
## for ldap
# the $ in auth.backend.ldap.filter is replaced by the
# 'username' from the login dialog
#auth.backend.ldap.hostname = "localhost"
#auth.backend.ldap.base-dn  = "dc=my-domain,dc=com"
#auth.backend.ldap.filter   = "(uid=$)"

#auth.require = (
#	"/server-status" => (
#		"method"  => "digest",
#		"realm"   => "download archiv",
#		"require" => "user=agent007|user=agent008"
#	),
#	"/server-info" => (
#		"method"  => "digest",
#		"realm"   => "download archiv",
#		"require" => "group=www|user=jan|host=192.168.2.10"
#	),
#	"/server-config" => (
#		"method"  => "ldap",
#		"realm"   => "server config",
#		"require" => "user=glen"
#	),
#)


#### url handling modules (rewrite, redirect, access)
#url.rewrite = (
#	"^/$" => "/server-status",
#)
#url.redirect = (
#	"^/wishlist/(.+)" => "http://www.123.org/$1",
#)

# define a pattern for the host url finding
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
#evhost.path-pattern = "/home/storage/dev/www/%3/htdocs/"

#### expire module
#expire.url = (
#	"/buggy/" => "access 2 hours",
#	"/asdhas/" => "access plus 1 seconds 2 minutes",
#)

#### ssi
#ssi.extension = ( ".shtml" )

#### rrdtool
#rrdtool.binary = "/usr/bin/rrdtool"
#rrdtool.db-name = "/var/www/lighttpd.rrd"

#### setenv
#setenv.add-request-header = ( "TRAV_ENV" => "mysql://user@host/db" )
#setenv.add-response-header = ( "X-Secret-Message" => "42" )

#### userdir module
#userdir.path = "public_html"
#userdir.exclude-user = ( "root", "postmaster" )
#
## if set, only users from this list may use the feature
#userdir.include-user = ""

#### alias module
#alias.url = (
#	"/cgi-bin/" => "/usr/lib/cgi-bin",
#)

