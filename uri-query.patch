--- lighttpd-1.4.23/src/mod_fastcgi.c~	2009-09-14 12:11:44.000000000 +0300
+++ lighttpd-1.4.23/src/mod_fastcgi.c	2009-09-14 12:15:11.731727479 +0300
@@ -3270,18 +3270,18 @@
 				    hctx->reconnects < 5) {
 					fcgi_reconnect(srv, hctx);
 
-					log_error_write(srv, __FILE__, __LINE__, "ssbsbs",
+					log_error_write(srv, __FILE__, __LINE__, "ssbsbsbs",
 						"response not received, request not sent",
 						"on socket:", proc->connection_name,
-						"for", con->uri.path, ", reconnecting");
+						"for", con->uri.path, "?", con->uri.query, ", reconnecting");
 
 					return HANDLER_WAIT_FOR_FD;
 				}
 
-				log_error_write(srv, __FILE__, __LINE__, "sosbsbs",
+				log_error_write(srv, __FILE__, __LINE__, "sosbsbsbs",
 						"response not received, request sent:", hctx->wb->bytes_out,
 						"on socket:", proc->connection_name,
-						"for", con->uri.path, ", closing connection");
+						"for", con->uri.path, "?", con->uri.query, ", closing connection");
 
 				fcgi_connection_close(srv, hctx);
 
@@ -3293,10 +3293,10 @@
 				/* response might have been already started, kill the connection */
 				fcgi_connection_close(srv, hctx);
 
-				log_error_write(srv, __FILE__, __LINE__, "ssbsbs",
+				log_error_write(srv, __FILE__, __LINE__, "ssbsbsbs",
 						"response already sent out, but backend returned error",
 						"on socket:", proc->connection_name,
-						"for", con->uri.path, ", terminating connection");
+						"for", con->uri.path, "?", con->uri.query, ", terminating connection");
 
 				connection_set_state(srv, con, CON_STATE_ERROR);
 			}
@@ -3346,9 +3346,9 @@
 			 * even if the FCGI_FIN packet is not received yet
 			 */
 		} else {
-			log_error_write(srv, __FILE__, __LINE__, "sbsbsd",
+			log_error_write(srv, __FILE__, __LINE__, "sbsbsbsd",
 					"error: unexpected close of fastcgi connection for",
-					con->uri.path,
+					con->uri.path, "?", con->uri.query,
 					"(no fastcgi process on socket:", proc->connection_name, "?)",
 					hctx->state);
 
@@ -3519,8 +3519,8 @@
 		if (!extension->note_is_sent) {
 			extension->note_is_sent = 1;
 
-			log_error_write(srv, __FILE__, __LINE__, "sbsbs",
-					"all handlers for ", con->uri.path,
+			log_error_write(srv, __FILE__, __LINE__, "sbsbsbs",
+					"all handlers for ", con->uri.path, "?", con->uri.query,
 					"on", extension->key,
 					"are down.");
 		}
